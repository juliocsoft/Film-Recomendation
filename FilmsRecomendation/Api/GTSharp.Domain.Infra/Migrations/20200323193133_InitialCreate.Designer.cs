// <auto-generated />
using System;
using GTSharp.Domain.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GTSharp.Domain.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200323193133_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GTSharp.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdGenre");

                    b.HasIndex("MovieId");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("GTSharp.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.Property<string>("OriginalTitle")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Popularity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("float");

                    b.Property<double>("VoteCount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OriginalTitle");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("GTSharp.Domain.Entities.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(160)");

                    b.Property<string>("User")
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("User");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("GTSharp.Domain.Entities.Genre", b =>
                {
                    b.HasOne("GTSharp.Domain.Entities.Movie", null)
                        .WithMany("Genres")
                        .HasForeignKey("MovieId");
                });
#pragma warning restore 612, 618
        }
    }
}
